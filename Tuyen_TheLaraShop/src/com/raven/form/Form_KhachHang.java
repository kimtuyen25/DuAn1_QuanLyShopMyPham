/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.print.PrintException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.pdf.PdfStructTreeController.returnType;

import qlsmp.DAO.KhachHangDAO;
import qlsmp.Model.KhachHang;

/**
 *
 * @author My Laptop
 */
public class Form_KhachHang extends javax.swing.JPanel {

	String EMAIL_REGEX = "^[A-Za-z0-9]+[A-Za-z0-9]*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)+$";
	String PHONE_NUMBER_REGEX = "0{1}[0-9]{9}";
	String DATE_REGEX = "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$";
	String CCCD_REGEX = "[0-9]{12}";
	KhachHangDAO dao = new KhachHangDAO();
	List<KhachHang> list = dao.selectAll();
	public boolean check = false;

	int row = -1;

	public Form_KhachHang() {
		initComponents();
		init();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	public void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel6 = new javax.swing.JPanel();
		jLabel20 = new javax.swing.JLabel();
		jPanel13 = new javax.swing.JPanel();
		txtTimKiem = new javax.swing.JTextField();
		btnTimKiem = new javax.swing.JButton();
		jScrollPane9 = new javax.swing.JScrollPane();
		tblKhachHang = new javax.swing.JTable();
		jPanel3 = new javax.swing.JPanel();
		jLabel11 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		txtMaKH = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		rdoNu = new javax.swing.JRadioButton();
		rdoNam = new javax.swing.JRadioButton();
		jLabel9 = new javax.swing.JLabel();
		txtHoTen = new javax.swing.JTextField();
		txtSDT = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		txtDiaChi = new javax.swing.JTextField();
		btnThem = new javax.swing.JButton();
		btnSua = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		btnMoi = new javax.swing.JButton();
		lblErrSDT = new javax.swing.JLabel();
		lblErrIDKhachHang = new javax.swing.JLabel();
		lblErrNgaySinh = new javax.swing.JLabel();
		txtNgaySinh = new com.toedter.calendar.JDateChooser();

		setBackground(new java.awt.Color(255, 255, 255));

		jPanel6.setBackground(new java.awt.Color(255, 255, 255));
		jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		jLabel20.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel20.setForeground(new java.awt.Color(11, 52, 106));
		jLabel20.setText("Tìm kiếm");

		jPanel13.setBackground(new java.awt.Color(255, 255, 255));
		jPanel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		txtTimKiem.setBackground(new java.awt.Color(226, 232, 240));
		txtTimKiem.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

		btnTimKiem.setBackground(new java.awt.Color(11, 52, 106));
		btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
		btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kinh_lup.png"))); // NOI18N
		btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimKiemActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
		jPanel13.setLayout(jPanel13Layout);
		jPanel13Layout.setHorizontalGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel13Layout.createSequentialGroup().addContainerGap()
						.addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnTimKiem,
								javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));
		jPanel13Layout.setVerticalGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel13Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(txtTimKiem))
						.addContainerGap()));

		tblKhachHang.setAutoCreateRowSorter(true);
		tblKhachHang.setBackground(new java.awt.Color(226, 232, 240));
		tblKhachHang.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null } },
				new String[] { "Mã khách hàng", "Họ tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Điện thoại" }));
		tblKhachHang.setSelectionBackground(new java.awt.Color(11, 52, 106));
		tblKhachHang.setSelectionForeground(new java.awt.Color(255, 255, 255));
		tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblKhachHangMouseClicked(evt);
			}
		});
		jScrollPane9.setViewportView(tblKhachHang);

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel6Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel6Layout.createSequentialGroup()
												.addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 74,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(757, 757, 757))
								.addGroup(jPanel6Layout.createSequentialGroup()
										.addGroup(jPanel6Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 681,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()))));
		jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel6Layout.createSequentialGroup().addContainerGap().addComponent(jLabel20)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 617,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jPanel3.setBackground(new java.awt.Color(255, 255, 255));
		jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		jPanel3.setEnabled(false);

		jLabel11.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel11.setForeground(new java.awt.Color(11, 52, 106));
		jLabel11.setText("Điện thoại");

		jLabel3.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel3.setForeground(new java.awt.Color(11, 52, 106));
		jLabel3.setText("Mã khách hàng");

		jLabel8.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel8.setForeground(new java.awt.Color(11, 52, 106));
		jLabel8.setText("Địa chỉ");

		txtMaKH.setEditable(false);
		txtMaKH.setBackground(new java.awt.Color(226, 232, 240));
		txtMaKH.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		txtMaKH.setEnabled(false);
		txtMaKH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtMaKHActionPerformed(evt);
			}
		});

		jLabel4.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel4.setForeground(new java.awt.Color(11, 52, 106));
		jLabel4.setText("Họ tên");

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));
		jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(226, 232, 240), null));

		buttonGroup1.add(rdoNu);
		rdoNu.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		rdoNu.setForeground(new java.awt.Color(11, 52, 106));
		rdoNu.setText("Nữ");

		buttonGroup1.add(rdoNam);
		rdoNam.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		rdoNam.setForeground(new java.awt.Color(11, 52, 106));
		rdoNam.setText("Nam");
		rdoNam.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rdoNamActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addComponent(rdoNam)
						.addGap(18, 18, 18).addComponent(rdoNu).addGap(0, 0, Short.MAX_VALUE)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel4Layout.createSequentialGroup().addContainerGap(10, Short.MAX_VALUE)
								.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(rdoNam).addComponent(rdoNu))
								.addGap(10, 10, 10)));

		jLabel9.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel9.setForeground(new java.awt.Color(11, 52, 106));
		jLabel9.setText("Giới tính");

		txtHoTen.setBackground(new java.awt.Color(226, 232, 240));
		txtHoTen.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		txtHoTen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtHoTenActionPerformed(evt);
			}
		});

		txtSDT.setBackground(new java.awt.Color(226, 232, 240));
		txtSDT.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		txtSDT.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtSDTActionPerformed(evt);
			}
		});

		jLabel7.setFont(new java.awt.Font("Roboto Condensed", 0, 14)); // NOI18N
		jLabel7.setForeground(new java.awt.Color(11, 52, 106));
		jLabel7.setText("Ngày sinh");

		txtDiaChi.setBackground(new java.awt.Color(226, 232, 240));
		txtDiaChi.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
		txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtDiaChiActionPerformed(evt);
			}
		});

		btnThem.setBackground(new java.awt.Color(11, 52, 106));
		btnThem.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
		btnThem.setForeground(new java.awt.Color(255, 255, 255));
		btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-white.png"))); // NOI18N
		btnThem.setText("Khách hàng");
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}
		});

		btnSua.setBackground(new java.awt.Color(11, 52, 106));
		btnSua.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
		btnSua.setForeground(new java.awt.Color(255, 255, 255));
		btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tick.png"))); // NOI18N
		btnSua.setText("Cập nhật");
		btnSua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSuaActionPerformed(evt);
			}
		});

		btnXoa.setBackground(new java.awt.Color(11, 52, 106));
		btnXoa.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXoaActionPerformed(evt);
			}
		});

		btnMoi.setBackground(new java.awt.Color(11, 52, 106));
		btnMoi.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
		btnMoi.setForeground(new java.awt.Color(255, 255, 255));
		btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/restart.png"))); // NOI18N
		btnMoi.setText("Mới");
		btnMoi.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnMoiActionPerformed(evt);
			}
		});

		lblErrSDT.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

		lblErrIDKhachHang.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

		lblErrNgaySinh.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

		txtNgaySinh.setDateFormatString("yyyy-MM-dd");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addGap(24, 24, 24)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(txtSDT).addComponent(jLabel7).addComponent(txtMaKH)
								.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 149,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel9)
								.addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel8).addComponent(txtHoTen).addComponent(txtDiaChi)
								.addComponent(jLabel11)
								.addComponent(lblErrSDT, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(lblErrIDKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel3Layout.createSequentialGroup()
												.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 125,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 125,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 125,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 125,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(lblErrNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap(21, Short.MAX_VALUE)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addGap(27, 27, 27).addComponent(jLabel3)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblErrIDKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(27, 27, 27).addComponent(jLabel9)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(27, 27, 27).addComponent(jLabel7).addGap(1, 1, 1)
						.addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblErrNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel8)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(27, 27, 27).addComponent(jLabel11).addGap(2, 2, 2)
						.addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(3, 3, 3)
						.addComponent(lblErrSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnThem).addComponent(btnXoa).addComponent(btnMoi).addComponent(btnSua))
						.addGap(21, 21, 21)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addGap(0, 0, 0)
						.addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 713,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(0, 0, 0)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	public void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKiemActionPerformed
		timKiem();
	}// GEN-LAST:event_btnTimKiemActionPerformed

	public void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblKhachHangMouseClicked
		this.row = tblKhachHang.rowAtPoint(evt.getPoint());
		edit();
	}// GEN-LAST:event_tblKhachHangMouseClicked

	public void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMaKHActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtMaKHActionPerformed

	public void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rdoNamActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_rdoNamActionPerformed

	public void txtHoTenActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtHoTenActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtHoTenActionPerformed

	public void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtSDTActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtSDTActionPerformed

	public void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtDiaChiActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtDiaChiActionPerformed

	public void btnThemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemActionPerformed
		insert();
	}// GEN-LAST:event_btnThemActionPerformed

	public void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSuaActionPerformed
		update();
	}// GEN-LAST:event_btnSuaActionPerformed

	public void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnXoaActionPerformed
		delete();
	}// GEN-LAST:event_btnXoaActionPerformed

	public void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnMoiActionPerformed
		clearForm();
	}// GEN-LAST:event_btnMoiActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	public javax.swing.JButton btnMoi;
	public javax.swing.JButton btnSua;
	public javax.swing.JButton btnThem;
	public javax.swing.JButton btnTimKiem;
	public javax.swing.JButton btnXoa;
	public javax.swing.ButtonGroup buttonGroup1;
	public javax.swing.JLabel jLabel11;
	public javax.swing.JLabel jLabel20;
	public javax.swing.JLabel jLabel3;
	public javax.swing.JLabel jLabel4;
	public javax.swing.JLabel jLabel7;
	public javax.swing.JLabel jLabel8;
	public javax.swing.JLabel jLabel9;
	public javax.swing.JPanel jPanel13;
	public javax.swing.JPanel jPanel3;
	public javax.swing.JPanel jPanel4;
	public javax.swing.JPanel jPanel6;
	public javax.swing.JScrollPane jScrollPane9;
	public javax.swing.JLabel lblErrIDKhachHang;
	public javax.swing.JLabel lblErrNgaySinh;
	public javax.swing.JLabel lblErrSDT;
	public javax.swing.JRadioButton rdoNam;
	public javax.swing.JRadioButton rdoNu;
	public javax.swing.JTable tblKhachHang;
	public javax.swing.JTextField txtDiaChi;
	public javax.swing.JTextField txtHoTen;
	public javax.swing.JTextField txtMaKH;
	public com.toedter.calendar.JDateChooser txtNgaySinh;
	public javax.swing.JTextField txtSDT;
	public javax.swing.JTextField txtTimKiem;
	// End of variables declaration//GEN-END:variables

	@Override
	protected void paintComponent(Graphics grphcs) {
		Graphics2D g2 = (Graphics2D) grphcs;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		GradientPaint gra = new GradientPaint(0, 0, Color.decode("#FFFFFF"), getWidth(), 0, Color.decode("#021B79"));
		g2.setPaint(gra);
		g2.fillRect(0, 0, getWidth(), getHeight());
		super.paintComponent(grphcs);
	}

	public void init() {
		this.fillToTable();
		this.fillID();
		this.row = -1;
		this.updateStatus();

		rdoNam.setSelected(true);
	}

	public void fillToTable() {
		DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
		model.setRowCount(0);
		try {
			String keyword = txtTimKiem.getText();
			List<KhachHang> list = dao.selectByKeyWord(keyword);
			for (KhachHang kh : list) {
				Object[] row = { kh.getMaKH(), kh.getTenKH(), kh.isGioiTinh() ? "Nam" : "Nữ", kh.getNgaySinh(),
						kh.getDiaChi(), kh.getSDT() };

				model.addRow(row);
			}
		} catch (Exception e) {
			System.out.println(e);
			// JOptionPane.showMessageDialog(this, "Lỗi truy vẫn dữ liệu");
		}
	}

	public int luachondelete;

	public void delete() {
		luachondelete = JOptionPane.showConfirmDialog(this, "Bạn thực sự muốn xóa khách hàng này?", "Xác nhận",
				JOptionPane.YES_NO_OPTION);

		if (luachondelete == JOptionPane.YES_OPTION) {
			int maKH = Integer.parseInt(txtMaKH.getText());
			try {
				dao.delete(maKH);
				this.fillToTable();
				clearForm();
				fillID();
				check = true;
				// JOptionPane.showMessageDialog(this, "Xóa thành công.");
			} catch (Exception e) {
				check = false;
				e.printStackTrace();
				// JOptionPane.showMessageDialog(this, "Xóa thất bại.");
			}
		} else {
			check = false;
			return;
		}
	}

	public void update() {
		KhachHang model = getFormUPDATE();
		try {
			dao.update(model);
			this.fillToTable();
			clearForm();
			fillToTable();
			fillID();
			check = true;
			// // JOptionPane.showMessageDialog(this, "Cập nhật thành công.");
		} catch (Exception e) {
			e.printStackTrace();
			check = false;
			// // JOptionPane.showMessageDialog(this, "Cập nhật thất bại.");
		}
	}

	public void insert() {
		KhachHang model = getForm();
		try {
			dao.insert(model);
			this.fillToTable();
			this.clearForm();
			fillID();
			check = true;
			// // JOptionPane.showMessageDialog(this, "Thêm mới thành công");
		} catch (Exception e) {
			check = false;
			System.out.println(e);
			// // JOptionPane.showMessageDialog(this, "Thêm mới thất bại");
		}
	}

	public void clearForm() {
		row = -1;
		updateStatus();
		fillID();

		txtDiaChi.setText("");
		txtHoTen.setText("");
		txtMaKH.setText("");
		txtNgaySinh.setDate(null);
		txtSDT.setText("");
		txtTimKiem.setText("");

		lblErrIDKhachHang.setText("");
		lblErrNgaySinh.setText("");
		lblErrSDT.setText("");
		check = true;
	}

	public void first() {
		row = 0;
		tblKhachHang.setRowSelectionInterval(row, row);
		edit();
	}

	public void prev() {
		if (row > 0) {
			row--;
			tblKhachHang.setRowSelectionInterval(row, row);
			edit();
		}
	}

	public void next() {
		if (row < tblKhachHang.getRowCount() - 1) {
			row++;
			tblKhachHang.setRowSelectionInterval(row, row);
			edit();
		}
	}

	public void last() {
		row = tblKhachHang.getRowCount() - 1;
		tblKhachHang.setRowSelectionInterval(row, row);
		edit();
	}
//
//    //set du lieu vao form

	public void setForm(KhachHang nv) {

		try {
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
			Date ngaySinh = dateFormat.parse(nv.getNgaySinh());

			txtDiaChi.setText(nv.getDiaChi());
			txtHoTen.setText(nv.getTenKH());
			txtMaKH.setText(String.valueOf(nv.getMaKH()));
			txtNgaySinh.setDate(ngaySinh);
			txtSDT.setText(nv.getSDT());
			if (nv.isGioiTinh() == true) {
				rdoNam.setSelected(true);
			} else {
				rdoNu.setSelected(true);
			}
		} catch (ParseException ex) {
			ex.printStackTrace();
		}
	}

	public KhachHang getForm() {
		KhachHang model = new KhachHang();

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Date ngaySinhDATE = txtNgaySinh.getDate();
		String ngaySinh = sdf.format(ngaySinhDATE);

		if (checkForm() == false) {
			return model = null;
		} else {
//            model.setMaKH(Integer.parseInt(txtMaKH.getText()));
			model.setTenKH(txtHoTen.getText());
			if (rdoNam.isSelected()) {
				model.setGioiTinh(true);
			} else {
				model.setGioiTinh(false);
			}
			model.setNgaySinh(ngaySinh);
			model.setDiaChi(txtDiaChi.getText());
			model.setSDT(txtSDT.getText());
			return model;
		}
	}

	public KhachHang getFormUPDATE() {
		KhachHang model = new KhachHang();

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Date ngaySinhDATE = txtNgaySinh.getDate();
		String ngaySinh = sdf.format(ngaySinhDATE);

		if (checkFormUpdate() == false) {
			return model = null;
		} else {
			model.setMaKH(Integer.parseInt(txtMaKH.getText()));
			model.setTenKH(txtHoTen.getText());
			if (rdoNam.isSelected()) {
				model.setGioiTinh(true);
			} else {
				model.setGioiTinh(false);
			}
			model.setNgaySinh(ngaySinh);
			model.setDiaChi(txtDiaChi.getText());
			model.setSDT(txtSDT.getText());
			return model;
		}
	}

	public void updateStatus() {
		boolean edit = this.row >= 0;
		boolean first = this.row == 0;
		boolean last = (this.row == tblKhachHang.getRowCount() - 1);

//        txtMaKH.setEditable(!edit);
		btnThem.setEnabled(!edit);
		btnSua.setEnabled(edit);
		btnXoa.setEnabled(edit);

	}

	public void edit() {
		try {
			int maKH = (int) tblKhachHang.getValueAt(this.row, 0);
			KhachHang model = (KhachHang) dao.selecteByID(maKH);
			if (model != null) {
				this.setForm(model);
				updateStatus();
			}
		} catch (Exception e) {
			System.out.println(e);
			// JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
		}
	}

	public void timKiem() {
		this.fillToTable();
		this.clearForm();
		this.row = -1;
		updateStatus();
	}

	boolean checkForm() {
		boolean check = true;
		String valueCCCD;
		String valueSDT;
		String valueUsername;

		String SDT = txtSDT.getText().trim();

		int countSDT = 0;

		for (KhachHang kh : list) {
			if (SDT.equalsIgnoreCase(kh.getSDT())) {
				countSDT++;
			}
		}

		if (txtHoTen.getText().isBlank() || txtNgaySinh.getDate() == null || txtSDT.getText().isBlank()) {
			check = check && false;
			// JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
		} else {
			check = check && true;
		}

//        try {
//            lblErrIDKhachHang.setForeground(Color.white);
//            if (Float.parseFloat(txtMaKH.getText()) <= 0) {
//                lblErrIDKhachHang.setForeground(Color.red);
//                lblErrIDKhachHang.setText("Nhập mã khách hàng lớn 0");
//                check = check && false;
//            }
//        } catch (NumberFormatException e) {
//            new PrintException(e);
//            lblErrIDKhachHang.setText("Mã khách hàng kiểu số");
//            lblErrIDKhachHang.setForeground(Color.red);
//            check = check && false;
//        }
		// check ngày sinh đúng định dạng
//        if (!txtNgaySinh.getText().matches(DATE_REGEX)) {
//            lblErrNgaySinh.setForeground(Color.red);
//            lblErrNgaySinh.setText("Vui lòng nhập ngày sinh theo định dạng yyyy-MM-dd");
//            check = check && false;
//        } else {
//            lblErrNgaySinh.setForeground(Color.white);
//            lblErrNgaySinh.setText("");
//            check = check && true;
//        }
		if (!SDT.matches(PHONE_NUMBER_REGEX)) {
			lblErrSDT.setForeground(Color.red);
			lblErrSDT.setText("Vui lòng nhập đúng số điện thoại gồm 10 số");
			check = check && false;

		} else {
			if (countSDT != 0) {
				lblErrSDT.setForeground(Color.red);
				lblErrSDT.setText("Số điện thoại đã tồn tại");
				check = check && false;

			} else {
				lblErrSDT.setForeground(Color.white);
				lblErrSDT.setText("");
				check = check && true;
			}
		}

		return check;
	}

	boolean checkFormUpdate() {
		boolean check = true;

		String SDT = txtSDT.getText().trim();
		int id = Integer.parseInt(txtMaKH.getText().trim());
		int countSDT = 0;

		for (KhachHang kh : list) {
			if (SDT.equalsIgnoreCase(kh.getSDT())) {
				if (id == kh.getMaKH()) {
					countSDT = 0;
				} else {
					countSDT++;
				}
			}
		}
		if (txtHoTen.getText().isBlank() || txtNgaySinh.getDate() == null || txtSDT.getText().isBlank()) {
			check = check && false;
			// JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
		} else {
			check = check && true;
		}

//        try {
//            lblErrIDKhachHang.setForeground(Color.white);
//            if (Float.parseFloat(txtMaKH.getText()) <= 0) {
//                lblErrIDKhachHang.setForeground(Color.red);
//                lblErrIDKhachHang.setText("Nhập mã khách hàng lớn 0");
//                check = check && false;
//            }
//        } catch (NumberFormatException e) {
//            new PrintException(e);
//            lblErrIDKhachHang.setText("Mã khách hàng kiểu số");
//            lblErrIDKhachHang.setForeground(Color.red);
//            check = check && false;
//        }
		// check ngày sinh đúng định dạng
//        if (!txtNgaySinh.getText().matches(DATE_REGEX)) {
//            lblErrNgaySinh.setForeground(Color.red);
//            lblErrNgaySinh.setText("Vui lòng nhập ngày sinh theo định dạng yyyy-MM-dd");
//            check = check && false;
//        } else {
//            lblErrNgaySinh.setForeground(Color.white);
//            lblErrNgaySinh.setText("");
//            check = check && true;
//        }
		if (!SDT.matches(PHONE_NUMBER_REGEX)) {
			lblErrSDT.setForeground(Color.red);
			lblErrSDT.setText("Vui lòng nhập đúng số điện thoại gồm 10 số");
			check = check && false;

		} else {
			if (countSDT != 0) {
				lblErrSDT.setForeground(Color.red);
				lblErrSDT.setText("Số điện thoại trùng với số điện thoại đã tồn tại khác");
				check = check && false;

			} else {
				lblErrSDT.setForeground(Color.white);
				lblErrSDT.setText("");
				check = check && true;
			}
		}
		return check;
	}

	public void fillID() {
		List<KhachHang> list = dao.selectAll();
		for (KhachHang kh : list) {
			for (int i = list.size(); i < list.size() + 1; i++) {
				System.out.println(String.valueOf(kh.getMaKH() + 1));
				txtMaKH.setText(String.valueOf(kh.getMaKH() + 1));
			}
		}
	}

}

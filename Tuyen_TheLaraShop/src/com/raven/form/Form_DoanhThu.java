package com.raven.form;

import com.raven.dialog.Message;
import com.raven.main.Main;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import qlsmp.DAO.CTHDDAO;
import qlsmp.DAO.CTPNDao;
import qlsmp.DAO.ChiTieuDao;
import qlsmp.DAO.DoanhThuDao;
import qlsmp.DAO.HoaDonDAO;
import qlsmp.DAO.KhachHangDAO;
import qlsmp.DAO.NCCDao;
import qlsmp.DAO.NhanVienDAO;
import qlsmp.DAO.PhieuNhapDAO;
import qlsmp.DAO.SanPhamDAO;
import qlsmp.Model.CTHD;
import qlsmp.Model.CTPN;
import qlsmp.Model.ChiTieu;
import qlsmp.Model.DoanhThu;
import qlsmp.Model.HoaDon;
import qlsmp.Model.KhachHang;
import qlsmp.Model.NCC;
import qlsmp.Model.NhanVien;
import qlsmp.Model.PhieuNhap;
import qlsmp.Model.SanPham;
import qlsmp.utis.Auth;

/**
 *
 * @author My Laptop
 */
public class Form_DoanhThu extends javax.swing.JPanel {

    /**
     * Creates new form Form_DoanhThu
     */
    public Form_DoanhThu() throws IOException {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnLocNgay = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnExcel = new javax.swing.JButton();
        dateTuNgay = new com.toedter.calendar.JDateChooser();
        dateDenNgay = new com.toedter.calendar.JDateChooser();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMuaHang = new javax.swing.JTable();
        btnNextHDBH = new javax.swing.JButton();
        btnPrevHDBH = new javax.swing.JButton();
        btnLastHDBH = new javax.swing.JButton();
        btnFirstHDBH = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhapHang = new javax.swing.JTable();
        btnFirstHDNH = new javax.swing.JButton();
        btnNextHDNH = new javax.swing.JButton();
        btnPrevHDNH = new javax.swing.JButton();
        btnLastHDNH = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblTongTien = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblChiTietDT = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(226, 232, 240), null));

        btnLocNgay.setBackground(new java.awt.Color(0, 0, 102));
        btnLocNgay.setForeground(new java.awt.Color(255, 255, 255));
        btnLocNgay.setText("Lọc");
        btnLocNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocNgayActionPerformed(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(11, 52, 106));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(11, 52, 106));
        jLabel24.setText("Từ ngày");

        jLabel25.setBackground(new java.awt.Color(11, 52, 106));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(11, 52, 106));
        jLabel25.setText("Đến ngày");

        btnExcel.setBackground(new java.awt.Color(0, 0, 102));
        btnExcel.setForeground(new java.awt.Color(255, 255, 255));
        btnExcel.setText("Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        dateTuNgay.setBackground(new java.awt.Color(255, 255, 255));
        dateTuNgay.setDateFormatString("dd-MM-yyyy");

        dateDenNgay.setBackground(new java.awt.Color(255, 255, 255));
        dateDenNgay.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btnLocNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25)
                            .addComponent(dateDenNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(dateTuNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLocNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tabs.setBackground(new java.awt.Color(255, 255, 255));
        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblMuaHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMuaHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMuaHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMuaHang);

        btnNextHDBH.setBackground(new java.awt.Color(0, 0, 102));
        btnNextHDBH.setForeground(new java.awt.Color(255, 255, 255));
        btnNextHDBH.setText("Next");
        btnNextHDBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextHDBHActionPerformed(evt);
            }
        });

        btnPrevHDBH.setBackground(new java.awt.Color(0, 0, 102));
        btnPrevHDBH.setForeground(new java.awt.Color(255, 255, 255));
        btnPrevHDBH.setText("Prev");
        btnPrevHDBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevHDBHActionPerformed(evt);
            }
        });

        btnLastHDBH.setBackground(new java.awt.Color(0, 0, 102));
        btnLastHDBH.setForeground(new java.awt.Color(255, 255, 255));
        btnLastHDBH.setText("Last");
        btnLastHDBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastHDBHActionPerformed(evt);
            }
        });

        btnFirstHDBH.setBackground(new java.awt.Color(0, 0, 102));
        btnFirstHDBH.setForeground(new java.awt.Color(255, 255, 255));
        btnFirstHDBH.setText("First");
        btnFirstHDBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstHDBHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(btnFirstHDBH)
                .addGap(18, 18, 18)
                .addComponent(btnNextHDBH)
                .addGap(18, 18, 18)
                .addComponent(btnPrevHDBH)
                .addGap(18, 18, 18)
                .addComponent(btnLastHDBH)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNextHDBH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnPrevHDBH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnLastHDBH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnFirstHDBH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        tabs.addTab("Mua hàng", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tblNhapHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNhapHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhapHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhapHang);

        btnFirstHDNH.setBackground(new java.awt.Color(0, 0, 102));
        btnFirstHDNH.setForeground(new java.awt.Color(255, 255, 255));
        btnFirstHDNH.setText("First");
        btnFirstHDNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstHDNHActionPerformed(evt);
            }
        });

        btnNextHDNH.setBackground(new java.awt.Color(0, 0, 102));
        btnNextHDNH.setForeground(new java.awt.Color(255, 255, 255));
        btnNextHDNH.setText("Next");
        btnNextHDNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextHDNHActionPerformed(evt);
            }
        });

        btnPrevHDNH.setBackground(new java.awt.Color(0, 0, 102));
        btnPrevHDNH.setForeground(new java.awt.Color(255, 255, 255));
        btnPrevHDNH.setText("Prev");
        btnPrevHDNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevHDNHActionPerformed(evt);
            }
        });

        btnLastHDNH.setBackground(new java.awt.Color(0, 0, 102));
        btnLastHDNH.setForeground(new java.awt.Color(255, 255, 255));
        btnLastHDNH.setText("Last");
        btnLastHDNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastHDNHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(btnFirstHDNH)
                .addGap(18, 18, 18)
                .addComponent(btnNextHDNH)
                .addGap(18, 18, 18)
                .addComponent(btnPrevHDNH)
                .addGap(18, 18, 18)
                .addComponent(btnLastHDNH)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNextHDNH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnPrevHDNH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnLastHDNH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(btnFirstHDNH, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        tabs.addTab("Nhập hàng", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));

        lblTongTien.setBackground(new java.awt.Color(226, 232, 240));
        lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTongTien.setText("jLabel1");
        lblTongTien.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tổng tiền:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tblChiTietDT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblChiTietDT);

        jLabel26.setBackground(new java.awt.Color(11, 52, 106));
        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(11, 52, 106));
        jLabel26.setText("Chi tiết đơn hàng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLocNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocNgayActionPerformed
        if (Auth.user.isChucVu()) {
            this.loc();
            this.setTongTien();
        } else {
            this.showMessage("Bạn không có quyền truy cập.");
        }
    }//GEN-LAST:event_btnLocNgayActionPerformed

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        this.setTongTien();
    }//GEN-LAST:event_tabsMouseClicked

    private void btnFirstHDBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstHDBHActionPerformed
        pageHDBH = 0;
        fillTableHD(listHD);
    }//GEN-LAST:event_btnFirstHDBHActionPerformed

    private void btnNextHDBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextHDBHActionPerformed
        pageHDBH++;
        if (pageHDBH > (listHD.size()) / 26) {
            pageHDBH = (listHD.size()) / 26;
        }
        fillTableHD(listHD);
    }//GEN-LAST:event_btnNextHDBHActionPerformed

    private void btnPrevHDBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevHDBHActionPerformed
        pageHDBH--;
        if (pageHDBH < 0) {
            pageHDBH = 0;
        }
        fillTableHD(listHD);
    }//GEN-LAST:event_btnPrevHDBHActionPerformed

    private void btnLastHDBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastHDBHActionPerformed
        pageHDBH = (listHD.size()) / 26;
        fillTableHD(listHD);
    }//GEN-LAST:event_btnLastHDBHActionPerformed

    private void btnFirstHDNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstHDNHActionPerformed
        pageHDNH = 0;
        fillTablePN(listPN);
    }//GEN-LAST:event_btnFirstHDNHActionPerformed

    private void btnNextHDNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextHDNHActionPerformed
        pageHDNH++;
        if (pageHDNH > (listPN.size()) / 26) {
            pageHDNH = (listPN.size()) / 26;
        }
        fillTablePN(listPN);
    }//GEN-LAST:event_btnNextHDNHActionPerformed

    private void btnPrevHDNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevHDNHActionPerformed
        pageHDNH--;
        if (pageHDNH < 0) {
            pageHDNH = 0;
        }
        fillTablePN(listPN);
    }//GEN-LAST:event_btnPrevHDNHActionPerformed

    private void btnLastHDNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastHDNHActionPerformed
        pageHDNH = (listPN.size()) / 26;
        fillTablePN(listPN);
    }//GEN-LAST:event_btnLastHDNHActionPerformed

    private void tblMuaHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMuaHangMouseClicked
        maHDBan = (int) tblMuaHang.getValueAt(tblMuaHang.getSelectedRow(), 0);
        fillChiTietDT();
    }//GEN-LAST:event_tblMuaHangMouseClicked

    private void tblNhapHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhapHangMouseClicked
        maHDNhap = (int) tblNhapHang.getValueAt(tblNhapHang.getSelectedRow(), 0);
        fillChiTietDT();
    }//GEN-LAST:event_tblNhapHangMouseClicked

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        try {
            this.writeExecl();
//            this.readExcel();
        } catch (IOException ex) {
            Logger.getLogger(Form_DoanhThu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnFirstHDBH;
    private javax.swing.JButton btnFirstHDNH;
    private javax.swing.JButton btnLastHDBH;
    private javax.swing.JButton btnLastHDNH;
    private javax.swing.JButton btnLocNgay;
    private javax.swing.JButton btnNextHDBH;
    private javax.swing.JButton btnNextHDNH;
    private javax.swing.JButton btnPrevHDBH;
    private javax.swing.JButton btnPrevHDNH;
    private com.toedter.calendar.JDateChooser dateDenNgay;
    private com.toedter.calendar.JDateChooser dateTuNgay;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChiTietDT;
    private javax.swing.JTable tblMuaHang;
    private javax.swing.JTable tblNhapHang;
    // End of variables declaration//GEN-END:variables

    HoaDonDAO hddao = new HoaDonDAO();
    PhieuNhapDAO pndao = new PhieuNhapDAO();
    CTHDDAO cthddao = new CTHDDAO();
    CTPNDao ctpndao = new CTPNDao();
    List<HoaDon> listHD = new ArrayList<>();
    List<PhieuNhap> listPN = new ArrayList<>();
    int maHDBan, maHDNhap;

    void init() {
        tblMuaHang.setDefaultEditor(Object.class, null);
        tblChiTietDT.setDefaultEditor(Object.class, null);
        tblNhapHang.setDefaultEditor(Object.class, null);
        tabs.setSelectedIndex(0);
        fillChiTietDT();
        dateTuNgay.setCalendar(null);
        dateDenNgay.setCalendar(null);
        listHD = hddao.selectAllMonth();
        pageHDBH = 0;
        fillTableHD(listHD);
        pageHDNH = 0;
        listPN = pndao.selectAllMonth();
        fillTablePN(listPN);
        this.setTongTien();
        DoanhThuDao dt = new DoanhThuDao();
        listdt = dt.selectAll("2023-12-01", "2023-12-31");
        ChiTieuDao ct = new ChiTieuDao();
        listct = ct.selectAll("2023-12-01", "2023-12-31");
    }

    private void showMessage(String message) {
        Message obj = new Message(Main.getFrames()[0], true);
        obj.showMessage(message);
    }

    void setTongTien() {
        DecimalFormat decimalFormat = new DecimalFormat("#,###,##0.0");
        double tong = 0;
        if (tabs.getSelectedIndex() == 0) {
            for (HoaDon hd : listHD) {
                tong += hd.getThanhTien();
            }
            lblTongTien.setText(decimalFormat.format(tong));
        } else if (tabs.getSelectedIndex() == 1) {
            for (PhieuNhap pn : listPN) {
                tong += pn.getThanhTien();
            }
            lblTongTien.setText(decimalFormat.format(tong));
        } else {
            System.out.println("chưa chọn tabs thôi");
        }
    }

    int pageHDBH = 0;
    int pageHDNH = 0;

    void fillTableHD(List<HoaDon> list) {
        DecimalFormat decimalFormat = new DecimalFormat("#,###,##0.0");
        NumberFormat percentFormat = NumberFormat.getPercentInstance();
        String[] colums = {"Mã hóa đơn", "Ngày tạo", "Tên nhân viên", "Tên khách hàng", "Tổng tiền", "Khuyến mãi", "Thành tiền"};
        DefaultTableModel model = new DefaultTableModel(colums, 0);

        for (int i = 0; i < 26; i++) {
            int itemIndex = this.pageHDBH * 26 + i;
            if (itemIndex >= list.size()) {
                break;
            }
            HoaDon enity = list.get(itemIndex);
            NhanVienDAO nvdao = new NhanVienDAO();
            KhachHangDAO khdao = new KhachHangDAO();
            NhanVien nv = nvdao.selectById(Integer.parseInt(enity.getIDAccount()));
            KhachHang kh = khdao.selecteByID(Integer.parseInt(enity.getIDKhachHang()));
            String tongtien = decimalFormat.format(enity.getTongTien());
            String thanhtien = decimalFormat.format(enity.getThanhTien());
            String sale = percentFormat.format(enity.getSale());
            model.addRow(new Object[]{enity.getMaHD(), enity.getNgayTao(), nv.getHoTen(), kh.getTenKH(), tongtien, sale, thanhtien});
        }
        tblMuaHang.setModel(model);
    }

    void fillTablePN(List<PhieuNhap> list) {
        DecimalFormat decimalFormat = new DecimalFormat("#,###,##0.0");
        //NumberFormat percentFormat = NumberFormat.getPercentInstance();
        String[] colums = {"Mã phiếu nhập", "Ngày tạo", "Tên nhân viên", "Tên nhà cung cấp", "Tổng tiền", "Chiếu khẩu", "Thành tiền"};
        DefaultTableModel model = new DefaultTableModel(colums, 0);
        for (int i = 0; i < 26; i++) {
            int itemIndex = this.pageHDNH * 26 + i;
            if (itemIndex >= list.size()) {
                break;
            }
            PhieuNhap enity = listPN.get(itemIndex);
            NhanVienDAO nvdao = new NhanVienDAO();
            NCCDao nccdao = new NCCDao();
            NhanVien nv = nvdao.selectById(enity.getMaNV());
            NCC ncc = nccdao.selecteByID(enity.getMaNCC());
            String tongtien = decimalFormat.format(enity.getTongTien());
            String thanhtien = decimalFormat.format(enity.getThanhTien());
            // String sale = percentFormat.format(enity.getChietKhau());
            model.addRow(new Object[]{enity.getMaPN(), enity.getNgayTao(), nv.getHoTen(), ncc.getTenNCC(), tongtien, enity.getChietKhau() + "%", thanhtien});
        }
        tblNhapHang.setModel(model);
    }
    List<DoanhThu> listdt = new ArrayList<>();
    List<ChiTieu> listct = new ArrayList<>();

    void loc() {
        SimpleDateFormat fomat = new SimpleDateFormat("yyyy-MM-dd");

        if (dateTuNgay.getDate() == null || dateDenNgay.getDate() == null) {
            this.showMessage("Vui lòng nhập đủ thông tin");
        } else {
            String tungay = fomat.format(dateTuNgay.getDate());
            String denngay = fomat.format(dateDenNgay.getDate());
            if (dateTuNgay.getDate().compareTo(dateDenNgay.getDate()) > 0) {
                this.showMessage("Từ ngày phải lớn hơn đến ngày");
            } else {
                listPN = pndao.selectBetweenAnd(tungay, denngay);
                fillTablePN(listPN);
                listHD = hddao.selectBetweenAnd(tungay, denngay);
                fillTableHD(listHD);
                DoanhThuDao dt = new DoanhThuDao();
                listdt = dt.selectAll(tungay, denngay);
                ChiTieuDao ct = new ChiTieuDao();
                listct = ct.selectAll(tungay, denngay);
            }
        }
//            this.writeExecl();
    }

    void fillChiTietDT() {
        DecimalFormat decimalFormat = new DecimalFormat("#,###,##0.0");
        String[] colums = {"Mã sản phẩm", "Tên sản phẩm", "Màu sắc", "Số lượng", "Thành tiền"};
        DefaultTableModel model = new DefaultTableModel(colums, 0);
        tblChiTietDT.setModel(model);
        List<CTHD> list = new ArrayList<>();
        List<CTPN> listpn = new ArrayList<>();
        SanPhamDAO spdao = new SanPhamDAO();
        if (tabs.getSelectedIndex() == 0 && maHDBan != 0) {
            model.setRowCount(0);
            list = cthddao.selectByMaHD(maHDBan);
            for (CTHD enity : list) {
                SanPham sp = spdao.selecteByID(enity.getMaSP());
                model.addRow(new Object[]{enity.getMaSP(), sp.getTenSP(), enity.getTenmau(), enity.getSl(), decimalFormat.format(enity.getThanhTien())});
                tblChiTietDT.setModel(model);
            }
        } else if (tabs.getSelectedIndex() == 1 && maHDNhap != 0) {
            model.setRowCount(0);
            listpn = ctpndao.selecteByMaPN(maHDNhap);
            for (CTPN enity : listpn) {
                SanPham sp = spdao.selecteByID(enity.getMaSP());
                model.addRow(new Object[]{enity.getMaSP(), sp.getTenSP(), enity.getTenMau(), enity.getSl(), decimalFormat.format(enity.getThanhTien())});
                tblChiTietDT.setModel(model);
            }
        } else {
            model.setRowCount(0);
        }
    }


    public void writeExecl() throws FileNotFoundException, IOException {
        String path = "";
        JFileChooser j = new JFileChooser();

        int x = j.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }

        FileOutputStream file = new FileOutputStream(path + ".xlsx");
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet workSheet = workbook.createSheet("Hóa đơn bán hàng");
        XSSFRow row;
        XSSFCell cellMaHD, cellNgayTaoHD, cellTenNVHD, cellTenKH, cellTongTienHD, cellKhuyenMai, cellThanhTienHD, cellTenSPHD, cellSLHD, cellTenMauHD, cellGiaBan;
        for (int i = 0; i < listdt.size() + 1; i++) {
            if (i == 0) {
                row = workSheet.createRow((short) 0);
                cellMaHD = row.createCell((short) 0);
                cellMaHD.setCellValue("Mã hóa đơn");
                cellNgayTaoHD = row.createCell((short) 1);
                cellNgayTaoHD.setCellValue("Ngày tạo");
                cellTenNVHD = row.createCell((short) 2);
                cellTenNVHD.setCellValue("Nhân viên");
                cellTenKH = row.createCell((short) 3);
                cellTenKH.setCellValue("Khách hàng");
                cellTongTienHD = row.createCell((short) 4);
                cellTongTienHD.setCellValue("Tổng tiền");
                cellKhuyenMai = row.createCell((short) 5);
                cellKhuyenMai.setCellValue("Sale");
                cellThanhTienHD = row.createCell((short) 6);
                cellThanhTienHD.setCellValue("Thành tiền");
                cellTenSPHD = row.createCell((short) 7);
                cellTenSPHD.setCellValue("Tên Sản phẩm");
                cellSLHD = row.createCell((short) 8);
                cellSLHD.setCellValue("Số lượng");
                cellTenMauHD = row.createCell((short) 9);
                cellTenMauHD.setCellValue("Màu sắc");
                cellGiaBan = row.createCell((short) 10);
                cellGiaBan.setCellValue("Giá bán");
            } else {
                row = workSheet.createRow((short) i);
                DoanhThu enity = listdt.get(i - 1);
                cellMaHD = row.createCell((short) 0);
                cellMaHD.setCellValue(enity.getMaHD());

                cellNgayTaoHD = row.createCell((short) 1);
                cellNgayTaoHD.setCellValue(enity.getNgayTao());

                cellTenNVHD = row.createCell((short) 2);
                cellTenNVHD.setCellValue(enity.getTenNV());

                cellTenKH = row.createCell((short) 3);
                cellTenKH.setCellValue(enity.getTenKH());

                cellTongTienHD = row.createCell((short) 4);
                cellTongTienHD.setCellValue(enity.getTongTien());

                NumberFormat percentFormat = NumberFormat.getPercentInstance();
                cellKhuyenMai = row.createCell((short) 5);
                cellKhuyenMai.setCellValue(percentFormat.format(enity.getSale()));

                cellThanhTienHD = row.createCell((short) 6);
                cellThanhTienHD.setCellValue(enity.getThanhTien());

                cellTenSPHD = row.createCell((short) 7);
                cellTenSPHD.setCellValue(enity.getTenSP());

                cellSLHD = row.createCell((short) 8);
                cellSLHD.setCellValue(enity.getSl());

                cellTenMauHD = row.createCell((short) 9);
                cellTenMauHD.setCellValue(enity.getTenMau());

                cellGiaBan = row.createCell((short) 10);
                cellGiaBan.setCellValue(enity.getGiaBan());
            }
        }

        XSSFSheet workSheet2 = workbook.createSheet("Hóa đơn nhập hàng");

        XSSFCell cellMaPN, cellNgayTaoPN, cellTenNVPN, cellTenNCC, cellTongTienPN, cellChietKhau, cellThanhTienPN, cellTenSPPN, cellSLPN, cellTenMauPN, cellGiaNhap;
        for (int i = 0; i < listct.size() + 1; i++) {
            if (i == 0) {
                row = workSheet2.createRow(0);
                cellMaPN = row.createCell(0);
                cellMaPN.setCellValue("Mã phiếu");
                cellNgayTaoPN = row.createCell(1);
                cellNgayTaoPN.setCellValue("Ngày tạo");
                cellTenNVPN = row.createCell(2);
                cellTenNVPN.setCellValue("Nhân viên");
                cellTenNCC = row.createCell(3);
                cellTenNCC.setCellValue("Nhà cung cấp");
                cellTongTienPN = row.createCell(4);
                cellTongTienPN.setCellValue("Tổng tiền");
                cellChietKhau = row.createCell(5);
                cellChietKhau.setCellValue("Chiết khấu");
                cellThanhTienPN = row.createCell(6);
                cellThanhTienPN.setCellValue("Thành tiền");
                cellTenSPPN = row.createCell(7);
                cellTenSPPN.setCellValue("Tên Sản phẩm");
                cellSLPN = row.createCell(8);
                cellSLPN.setCellValue("Số lượng");
                cellTenMauPN = row.createCell(9);
                cellTenMauPN.setCellValue("Màu sắc");
                cellGiaNhap = row.createCell(10);
                cellGiaNhap.setCellValue("Giá nhập");
            } else {
                ChiTieu enity = listct.get(i - 1);
                row = workSheet2.createRow(i);
                cellMaPN = row.createCell(0);
                cellMaPN.setCellValue(enity.getMaPN());

                cellNgayTaoPN = row.createCell(1);
                cellNgayTaoPN.setCellValue(enity.getNgayTao());

                cellTenNVPN = row.createCell(2);
                cellTenNVPN.setCellValue(enity.getTenNV());

                cellTenNCC = row.createCell(3);
                cellTenNCC.setCellValue(enity.getTenNCC());

                cellTongTienPN = row.createCell(4);
                cellTongTienPN.setCellValue(enity.getTongTien());

                cellChietKhau = row.createCell(5);
                cellChietKhau.setCellValue(enity.getChietKhau() + "%");

                cellThanhTienPN = row.createCell(6);
                cellThanhTienPN.setCellValue(enity.getThanhTien());

                cellTenSPPN = row.createCell(7);
                cellTenSPPN.setCellValue(enity.getTenSp());

                cellSLPN = row.createCell(8);
                cellSLPN.setCellValue(enity.getSl());

                cellTenMauPN = row.createCell(9);
                cellTenMauPN.setCellValue(enity.getTenMau());

                cellGiaNhap = row.createCell(10);
                cellGiaNhap.setCellValue(enity.getGiaNhap());
            }
        }
        workbook.write(file);
        workbook.close();
        file.close();
        this.showMessage("Xuất thành công!");
    }

// ĐỌC K DÙNG ĐÂU HIHI
    public void readExcel() throws FileNotFoundException, IOException {
        FileInputStream file = new FileInputStream("Read.xlsx");
        XSSFWorkbook workbook = new XSSFWorkbook(file);
        XSSFSheet sheet = workbook.getSheetAt(0);
        FormulaEvaluator formula = workbook.getCreationHelper().createFormulaEvaluator();
        for (Row row : sheet) {
            if (row.getCell(0) != null) {
                System.out.println(row.getCell(0));
            }
            if (row.getCell(1) != null) {
                System.out.println(row.getCell(1));
            }
        }
        workbook.close();
        file.close();
    }
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raven.form;

import com.raven.form.Form_NhapKiemKeHangHoa;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import static org.apache.poi.xssf.usermodel.XSSFBuiltinTableStyle.init;
import qlsmp.DAO.ChiTietKiemKeDAO;
import qlsmp.DAO.KetQuaXuLyDAO;
import qlsmp.DAO.KiemKeDAO;
import qlsmp.DAO.SanPhamKiemKeDAO;
import qlsmp.DAO.SanPham_MauSacDAO;
import qlsmp.Model.ChiTietKiemKe;
import qlsmp.Model.KetQuaXuLy;
import qlsmp.Model.KiemKe;
import qlsmp.Model.SanPhamKiemKe;
import qlsmp.Model.SanPham_MauSac;

public class Form_KiemKe_XuLyXuatKho extends javax.swing.JFrame {

    static Form_NhapKiemKeHangHoa formkk;
    int row = 0;
    KiemKeDAO daokk = new KiemKeDAO();
    List<KiemKe> listKK = new ArrayList<>();
    ChiTietKiemKeDAO daoCTKK = new ChiTietKiemKeDAO();
    List<ChiTietKiemKe> listCTKK = new ArrayList<>();
    KetQuaXuLyDAO daoKQ = new KetQuaXuLyDAO();
    List<KetQuaXuLy> listKQ = new ArrayList<>();
    SanPhamKiemKeDAO daoSPkk = new SanPhamKiemKeDAO();
    List<SanPhamKiemKe> listSPkk = new ArrayList<>();
    SanPham_MauSacDAO daoSPMS = new SanPham_MauSacDAO();
    List<SanPham_MauSac> listSPMS = new ArrayList<>();

    public Form_KiemKe_XuLyXuatKho(Form_NhapKiemKeHangHoa formkk) {
        this.formkk = formkk;
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHangHoaXuatKho = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Cập nhật kho (Xuất kho)");

        btnLuu.setText("Cập nhật kho");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setOpaque(true);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        tblHangHoaXuatKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Màu SP", "Thống kê kế toán", "Thống kê thực tế", "Chênh lệch", "Loại xử lý"
            }
        ));
        jScrollPane2.setViewportView(tblHangHoaXuatKho);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Hàng hóa", jPanel8);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLuu)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLuu)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        update();
    }//GEN-LAST:event_btnLuuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_KiemKe_XuLyXuatKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_KiemKe_XuLyXuatKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_KiemKe_XuLyXuatKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_KiemKe_XuLyXuatKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_KiemKe_XuLyXuatKho(formkk).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tblHangHoaXuatKho;
    // End of variables declaration//GEN-END:variables
  public void init() {
        setLocationRelativeTo(null);
    }

    public void fillToTableCTKK(int id) {
        fillToTableKiemKeChiTiet(id);
    }

    private void fillToTableKiemKeChiTiet(int id) {
        DefaultTableModel model = (DefaultTableModel) tblHangHoaXuatKho.getModel();
        model.setRowCount(0);

        if (row >= 0) {
            try {
                List<ChiTietKiemKe> listCTKK = daoCTKK.getChiTietKiemKeXuatKho(id);

                for (ChiTietKiemKe ctkk : listCTKK) {
                    Object[] rowCTKK = {
                        ctkk.getMaSP(),
                        ctkk.getTenSP(),
                        ctkk.getMauSac(),
                        ctkk.getSlKeToan(),
                        ctkk.getSlThucTe(),
                        ctkk.getChenhLech(),
                        ctkk.getLoaiXuLy()
                    };
                    model.addRow(rowCTKK);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    String loaiXuLy(int id) {
        List<ChiTietKiemKe> listCTKK = daoCTKK.getChiTietKiemKe(id);
        String loaiXuLy = null;

        for (ChiTietKiemKe chiTietKiemKe : listCTKK) {
            if (chiTietKiemKe.getMaKK() == id) {
                loaiXuLy = chiTietKiemKe.getLoaiXuLy().trim();
            }
        }
        return loaiXuLy;
    }

    protected void update() {
        String message = "";
        boolean check = false;
        Form_KiemKe_XuLyNhapKho nhapKho = new Form_KiemKe_XuLyNhapKho(formkk);

        for (int i = 0; i < tblHangHoaXuatKho.getRowCount(); i++) {
            Object soLuongValue = tblHangHoaXuatKho.getValueAt(i, 4);
            Object idSPValue = tblHangHoaXuatKho.getValueAt(i, 0);
            Object tenMauValue = tblHangHoaXuatKho.getValueAt(i, 2);

            int soLuong = (int) soLuongValue;
            int idSP = (int) idSPValue;
            String tenMau = String.valueOf(tenMauValue);
            try {
                daoSPMS.Update(soLuong, idSP, tenMau);
                message = "Cập nhật thành công";
                setValueXuat(true);
                formkk.editButtonAfterUpdate(nhapKho.getValueNhap(), true);
            } catch (Exception e) {
                e.printStackTrace();
                message = "Cập nhật thất bại";
            }
        }
        JOptionPane.showMessageDialog(this, message);
    }

    static boolean valueXuat;

    void setValueXuat(boolean value) {
        valueXuat = value;
    }

    boolean getValueXuat() {
        return valueXuat;
    }
}
